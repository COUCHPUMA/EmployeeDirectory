{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from\"react\";import\"../styles/DataBody.css\";import DataAreaContext from\"../utils/DataAreaContext\";var DataBody=function DataBody(){var context=useContext(DataAreaContext);function formatDate(date){var dateArray=date.split(\"-\");var year=dateArray[0];var month=dateArray[1];var dayArray=dateArray[2].split(\"T\");var day=dayArray[0];var formattedDate=[month,day,year].join(\"-\");return formattedDate;}return/*#__PURE__*/_jsxs(\"tbody\",{children:[\" \",context.developerState.filteredUsers[0]!==undefined&&context.developerState.filteredUsers[0].name!==undefined?context.developerState.filteredUsers.map(function(_ref){var login=_ref.login,name=_ref.name,picture=_ref.picture,phone=_ref.phone,email=_ref.email,dob=_ref.dob;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{data:true,th:\"Image\",className:\"align-middle\",children:/*#__PURE__*/_jsx(\"img\",{src:picture.medium,alt:\"profile image for \"+name.first+\" \"+name.last,className:\"img-responsive\"})}),/*#__PURE__*/_jsxs(\"td\",{data:true,th:\"Name\",className:\"name-cell align-middle\",children:[\" \",name.first,\" \",name.last,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{data:true,th:\"Phone\",className:\"align-middle\",children:[\" \",phone,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{data:true,th:\"Email\",className:\"align-middle\",children:[/*#__PURE__*/_jsxs(\"a\",{href:\"mailto:\"+email,target:\"__blank\",children:[\" \",email,\" \"]}),\"  \"]}),/*#__PURE__*/_jsxs(\"td\",{data:true,th:\"DOB\",className:\"align-middle\",children:[\" \",formatDate(dob.date),\" \"]}),\"  \"]},login.uuid);}):/*#__PURE__*/_jsx(_Fragment,{}),\" \"]});};export default DataBody;","map":{"version":3,"sources":["C:/Users/couch/GITLAB/EmployeeDirectory/employeedirectory/src/components/DataBody.js"],"names":["React","useContext","DataAreaContext","DataBody","context","formatDate","date","dateArray","split","year","month","dayArray","day","formattedDate","join","developerState","filteredUsers","undefined","name","map","login","picture","phone","email","dob","medium","first","last","uuid"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,eAAP,KAA4B,0BAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGH,UAAU,CAACC,eAAD,CAA1B,CAEA,QAASG,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CACtB,GAAMC,CAAAA,SAAS,CAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB,CACA,GAAMC,CAAAA,IAAI,CAAGF,SAAS,CAAC,CAAD,CAAtB,CACA,GAAMG,CAAAA,KAAK,CAAGH,SAAS,CAAC,CAAD,CAAvB,CACA,GAAMI,CAAAA,QAAQ,CAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAb,CAAmB,GAAnB,CAAjB,CACA,GAAMI,CAAAA,GAAG,CAAGD,QAAQ,CAAC,CAAD,CAApB,CACA,GAAME,CAAAA,aAAa,CAAG,CAACH,KAAD,CAAQE,GAAR,CAAaH,IAAb,EAAmBK,IAAnB,CAAwB,GAAxB,CAAtB,CACA,MAAOD,CAAAA,aAAP,CACH,CAED,mBAAS,6BAEDT,OAAO,CAACW,cAAR,CAAuBC,aAAvB,CAAqC,CAArC,IAA4CC,SAA5C,EAAyDb,OAAO,CAACW,cAAR,CAAuBC,aAAvB,CAAqC,CAArC,EAAwCE,IAAxC,GAAiDD,SAA1G,CACIb,OAAO,CAACW,cAAR,CAAuBC,aAAvB,CAAqCG,GAArC,CAAyC,cAAiD,IAA9CC,CAAAA,KAA8C,MAA9CA,KAA8C,CAAvCF,IAAuC,MAAvCA,IAAuC,CAAjCG,OAAiC,MAAjCA,OAAiC,CAAxBC,KAAwB,MAAxBA,KAAwB,CAAjBC,KAAiB,MAAjBA,KAAiB,CAAVC,GAAU,MAAVA,GAAU,CACtF,mBAAS,mCAEL,WACG,IAAI,KADP,CACQ,EAAE,CAAG,OADb,CAEA,SAAS,CAAG,cAFZ,uBAGA,YACI,GAAG,CAAKH,OAAO,CAACI,MADpB,CAEA,GAAG,CAAK,qBAAuBP,IAAI,CAACQ,KAA5B,CAAoC,GAApC,CAA0CR,IAAI,CAACS,IAFvD,CAGA,SAAS,CAAG,gBAHZ,EAHA,EAFK,cAaL,YACG,IAAI,KADP,CACQ,EAAE,CAAG,MADb,CAEA,SAAS,CAAG,wBAFZ,eAEyCT,IAAI,CAACQ,KAF9C,KAEwDR,IAAI,CAACS,IAF7D,OAbK,cAiBL,YACG,IAAI,KADP,CACQ,EAAE,CAAG,OADb,CAEA,SAAS,CAAG,cAFZ,eAE+BL,KAF/B,OAjBK,cAsBL,YACG,IAAI,KADP,CACQ,EAAE,CAAG,OADb,CAEA,SAAS,CAAG,cAFZ,wBAIA,WACE,IAAI,CAAK,UAAYC,KADvB,CAEA,MAAM,CAAG,SAFT,eAEuBA,KAFvB,OAJA,QAtBK,cA+BL,YACG,IAAI,KADP,CACQ,EAAE,CAAG,KADb,CAEA,SAAS,CAAG,cAFZ,eAE+BlB,UAAU,CAACmB,GAAG,CAAClB,IAAL,CAFzC,OA/BK,QACMc,KAAK,CAACQ,IADZ,CAAT,CAoCH,CArCD,CADJ,cAuCM,kBAzCL,OAAT,CA+CH,CA5DD,CA8DA,cAAezB,CAAAA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport \"../styles/DataBody.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataBody = () => {\n    const context = useContext(DataAreaContext);\n\n    function formatDate(date) {\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate = [month, day, year].join(\"-\");\n        return formattedDate;\n    }\n\n    return ( <\n        tbody > {\n            context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n                context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n                    return ( <\n                        tr key = { login.uuid } >\n                        <\n                        td data th = \"Image\"\n                        className = \"align-middle\" >\n                        <\n                        img src = { picture.medium }\n                        alt = { \"profile image for \" + name.first + \" \" + name.last }\n                        className = \"img-responsive\" /\n                        >\n                        <\n                        /td> \n\n                        <\n                        td data th = \"Name\"\n                        className = \"name-cell align-middle\" > { name.first } { name.last } < /td>  \n\n                        <\n                        td data th = \"Phone\"\n                        className = \"align-middle\" > { phone } <\n                        /td> \n\n                        <\n                        td data th = \"Email\"\n                        className = \"align-middle\" >\n\n                        <\n                        a href = { \"mailto:\" + email }\n                        target = \"__blank\" > { email } < /a>  < /\n                        td >\n\n                        <\n                        td data th = \"DOB\"\n                        className = \"align-middle\" > { formatDate(dob.date) } < /td>  < /\n                        tr >\n                    );\n                })\n            ) : ( < >\n                <\n                />\n            )\n        } < /tbody>\n    );\n}\n\nexport default DataBody;"]},"metadata":{},"sourceType":"module"}