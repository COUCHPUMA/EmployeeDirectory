[{"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\index.js":"1","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\App.js":"2","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\serviceworker.js":"3","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Wrapper.js":"4","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Main.js":"5","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Header.js":"6","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\DataArea.js":"7","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\DataTable.js":"8","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Nav.js":"9","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\utils\\API.js":"10","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\utils\\DataAreaContext.js":"11","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\SearchName.js":"12","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\SearchDOB.js":"13","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\DataBody.js":"14"},{"size":248,"mtime":1608394804220,"results":"15","hashOfConfig":"16"},{"size":394,"mtime":1608394804194,"results":"17","hashOfConfig":"16"},{"size":3590,"mtime":1608394804225,"results":"18","hashOfConfig":"16"},{"size":206,"mtime":1608394804216,"results":"19","hashOfConfig":"16"},{"size":218,"mtime":1608394804208,"results":"20","hashOfConfig":"16"},{"size":329,"mtime":1608394804205,"results":"21","hashOfConfig":"16"},{"size":4444,"mtime":1608394804199,"results":"22","hashOfConfig":"16"},{"size":1253,"mtime":1608394804203,"results":"23","hashOfConfig":"16"},{"size":967,"mtime":1608394804210,"results":"24","hashOfConfig":"16"},{"size":178,"mtime":1608394804244,"results":"25","hashOfConfig":"16"},{"size":111,"mtime":1608394804246,"results":"26","hashOfConfig":"16"},{"size":767,"mtime":1608394804214,"results":"27","hashOfConfig":"16"},{"size":826,"mtime":1608394804212,"results":"28","hashOfConfig":"16"},{"size":2313,"mtime":1608394804201,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"na21ca",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\index.js",[],["62","63"],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\App.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\serviceworker.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Wrapper.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Main.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Header.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\DataArea.js",["64","65"],"import React, { useState, useEffect } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataArea = () => {\n        const [developerState, setDeveloperState] = useState({\n            users: [],\n            order: \"descend\",\n            filteredUsers: [],\n            headings: [\n                { name: \"Image\", width: \"10%\", order: \"descend\" },\n                { name: \"name\", width: \"10%\", order: \"descend\" },\n                { name: \"phone\", width: \"20%\", order: \"descend\" },\n                { name: \"email\", width: \"20%\", order: \"descend\" },\n                { name: \"dob\", width: \"10%\", order: \"descend\" }\n            ]\n        });\n\n        const handleSort = heading => {\n            let currentOrder = developerState.headings\n                .filter(elem => elem.name === heading)\n                .map(elem => elem.order)\n                .toString();\n\n            if (currentOrder === \"descend\") {\n                currentOrder = \"ascend\";\n            } else {\n                currentOrder = \"descend\";\n            }\n\n            const compareFnc = (a, b) => {\n                if (currentOrder === \"ascend\") {\n                    // account for missing values\n                    if (a[heading] === undefined) {\n                        return 1;\n                    } else if (b[heading] === undefined) {\n                        return -1;\n                    }\n                    // numerically\n                    else if (heading === \"name\") {\n                        return a[heading].first.localeCompare(b[heading].first);\n                    } else if (heading === \"dob\") {\n                        return a[heading].age - b[heading].age;\n                    } else {\n                        return a[heading].localeCompare(b[heading]);\n                    }\n                } else {\n                    // account for missing values\n                    if (a[heading] === undefined) {\n                        return 1;\n                    } else if (b[heading] === undefined) {\n                        return -1;\n                    }\n                    // numerically\n                    else if (heading === \"name\") {\n                        return b[heading].first.localeCompare(a[heading].first);\n                    } else if (heading === \"dob\") {\n                        return b[heading].age - a[heading].age;\n                    } else {\n                        return b[heading].localeCompare(a[heading]);\n                    }\n                }\n            };\n            const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n            const updatedHeadings = developerState.headings.map(elem => {\n                elem.order = elem.name === heading ? currentOrder : elem.order;\n                return elem;\n            });\n\n            setDeveloperState({\n                ...developerState,\n                filteredUsers: sortedUsers,\n                headings: updatedHeadings\n            });\n        };\n\n        const handleSearchChange = event => {\n            const filter = event.target.value;\n            const filteredList = developerState.users.filter(item => {\n                let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\n                console.log(filter, values)\n                if (values.indexOf(filter.toLowerCase()) !== -1) {\n                    return item\n                };\n            });\n\n            setDeveloperState({...developerState, filteredUsers: filteredList });\n        };\n\n\n        useEffect(() => {\n            API.getUsers().then(results => {\n                console.log(results.data.results);\n                setDeveloperState({\n                    ...developerState,\n                    users: results.data.results,\n                    filteredUsers: results.data.results\n                });\n            });\n        }, []);\n\n        return ( <\n            DataAreaContext.Provider value = {\n                { developerState, handleSearchChange, handleSort } } >\n            <\n            Nav / >\n            <\n            div className = \"data-area\" > {\n                developerState.filteredUsers.length > 0 ? < DataTable / > : < div > < /div>} <\n                    /div> <\n                    /DataAreaContext.Provider>\n            );\n        };\n\n        export default DataArea;","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\DataTable.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\Nav.js",["66","67","68","69"],"import React from \"react\";\nimport SearchName from \"./SearchName.js\";\nimport SearchDOB from \"./SearchDOB.js\";\nimport \"../styles/Nav.css\";\n\nfunction Nav() {\n    return ( <\n        nav className = \"navbar navbar-expand-lg navbar-light bg-light\" >\n        <\n        button className = \"navbar-toggler\"\n        type = \"button\"\n        data toggle = \"collapse\"\n        data target = \"#navbarNav\"\n        aria controls = \"navbarNav\"\n        aria expanded = \"false\"\n        aria label = \"Toggle navigation\" >\n        <\n        span className = \"navbar-toggler-icon\" / >\n        <\n        /button> <\n        div className = \"collapse navbar-collapse row\"\n        id = \"navbarNav\" > {\n            /* <div className=\"input-group col-8\">\n                    <SearchDOB />\n                    </div> */\n        } <\n        div className = \"search-area col-4\" >\n        <\n        SearchName / >\n        <\n        /div> < /\n        div > <\n        /nav>\n    );\n}\nexport default Nav;","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\utils\\API.js",["70"],"import axios from \"axios\";\n\nexport default {\n    // Gets all users\n    getUsers: function() {\n\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};","C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\utils\\DataAreaContext.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\SearchName.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\SearchDOB.js",[],"C:\\Users\\couch\\GITLAB\\EmployeeDirectory\\src\\components\\DataBody.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":82,"column":67,"nodeType":"77","messageId":"78","endLine":82,"endColumn":69},{"ruleId":"79","severity":1,"message":"80","line":103,"column":12,"nodeType":"81","endLine":103,"endColumn":14,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":13,"column":9,"nodeType":"89","endLine":13,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":15,"column":9,"nodeType":"89","endLine":15,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":16,"column":9,"nodeType":"89","endLine":16,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":3,"column":1,"nodeType":"92","endLine":9,"endColumn":3},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'developerState'. Either include it or remove the dependency array. You can also do a functional update 'setDeveloperState(d => ...)' if you only need 'developerState' in the 'setDeveloperState' call.","ArrayExpression",["95"],"no-unused-vars","'SearchDOB' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [developerState]",{"range":"98","text":"99"},[3980,3982],"[developerState]"]