{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\couch\\\\GITLAB\\\\EmployeeDirectory\\\\employeedirectory\\\\src\\\\components\\\\DataBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"../styles/DataBody.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataBody = () => {\n  _s();\n\n  const context = useContext(DataAreaContext);\n\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: [\" \", context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? context.developerState.filteredUsers.map(({\n      login,\n      name,\n      picture,\n      phone,\n      email,\n      dob\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          data: true,\n          th: \"Image\",\n          className: \"align-middle\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: picture.medium,\n            alt: \"profile image for \" + name.first + \" \" + name.last,\n            className: \"img-responsive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          data: true,\n          th: \"Name\",\n          className: \"name-cell align-middle\",\n          children: [\" \", name.first, \" \", name.last, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 30\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          data: true,\n          th: \"Phone\",\n          className: \"align-middle\",\n          children: [\" \", phone, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          data: true,\n          th: \"Email\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"mailto:\" + email,\n            target: \"__blank\",\n            children: [\" \", email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          data: true,\n          th: \"DOB\",\n          className: \"align-middle\",\n          children: [\" \", formatDate(dob.date), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 30\n        }, this), \" \"]\n      }, login.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 30\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 14\n  }, this);\n};\n\n_s(DataBody, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = DataBody;\nexport default DataBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBody\");","map":{"version":3,"sources":["C:/Users/couch/GITLAB/EmployeeDirectory/employeedirectory/src/components/DataBody.js"],"names":["React","useContext","DataAreaContext","DataBody","context","formatDate","date","dateArray","split","year","month","dayArray","day","formattedDate","join","developerState","filteredUsers","undefined","name","map","login","picture","phone","email","dob","medium","first","last","uuid"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport \"../styles/DataBody.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataBody = () => {\n    const context = useContext(DataAreaContext);\n\n    function formatDate(date) {\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate = [month, day, year].join(\"-\");\n        return formattedDate;\n    }\n\n    return ( <\n        tbody > {\n            context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n                context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n                    return ( <\n                        tr key = { login.uuid } >\n                        <\n                        td data th = \"Image\"\n                        className = \"align-middle\" >\n                        <\n                        img src = { picture.medium }\n                        alt = { \"profile image for \" + name.first + \" \" + name.last }\n                        className = \"img-responsive\" /\n                        >\n                        <\n                        /td> <\n                        td data th = \"Name\"\n                        className = \"name-cell align-middle\" > { name.first } { name.last } <\n                        /td> <\n                        td data th = \"Phone\"\n                        className = \"align-middle\" > { phone } <\n                        /td> <\n                        td data th = \"Email\"\n                        className = \"align-middle\" >\n                        <\n                        a href = { \"mailto:\" + email }\n                        target = \"__blank\" > { email } <\n                        /a> < /\n                        td > <\n                        td data th = \"DOB\"\n                        className = \"align-middle\" > { formatDate(dob.date) } <\n                        /td> < /\n                        tr >\n                    );\n                })\n            ) : ( <\n                >\n                <\n                />\n            )\n        } <\n        /tbody>\n    );\n}\n\nexport default DataBody;"]},"metadata":{},"sourceType":"module"}